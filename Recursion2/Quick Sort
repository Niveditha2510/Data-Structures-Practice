#include <iostream>
	using namespace std;
	

    int partition(int input[],int s,int e)
    {
        int pivot=input[s],count=0;
        for(int i=s+1;i<=e;i++)
        {
            if(input[i]<=pivot)
            {
                count++;
            }
        }
        int pivot_index=s+count;
        swap(input[s],input[pivot_index]);
        int i=0,j=e;
        
        while(i<pivot_index && j>pivot_index)
        {
        if(input[i]<=pivot)
        {
            i++;
        }
        else if(input[j]>pivot)
        {
            j--;
        }
        else
        {
            swap(input[i],input[j]);
            i++;j--;
        }
        }
            return pivot_index;
    }
	void quickSortHelper(int input[], int s, int e)
    {
    	if(s>=e)
            return;
        int pi=partition(input,s,e);
        
        quickSortHelper(input,s,pi-1);
        quickSortHelper(input,pi+1,e);
	}
        
	void quickSort(int input[], int size)
	{
    		quickSortHelper(input, 0, size - 1);
	}
		
int main(){
    int n;
    cin >> n;
  
    int *input = new int[n];
    
    for(int i = 0; i < n; i++) {
        cin >> input[i];
    }
    
    quickSort(input, n);
    for(int i = 0; i < n; i++) {
        cout << input[i] << " ";
    }
    
    delete [] input;

}

